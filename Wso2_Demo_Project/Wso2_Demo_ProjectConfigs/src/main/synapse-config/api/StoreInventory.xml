<?xml version="1.0" encoding="UTF-8"?>
<api context="/storeinventory" name="StoreInventory" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET" uri-template="/inventory">
        <inSequence>
            <property name="API_NAME" scope="default" type="STRING" value="storeinventory"/>
            <property expression="fn:concat('/storeinventory',$axis2:REST_URL_POSTFIX)" name="API_URL" scope="default" type="STRING"/>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="storeinventory"/>
                <with-param name="messageField" value="storeinventory Get OrderInfo Initiated"/>
                <with-param name="logLevelField" value="DEBUG"/>
            </call-template>
            <!-- Begin: Logging the Start of API call  -->
            <call-template target="LogTP">
                <with-param name="apiNameField" value="storeinventory"/>
                <with-param name="messageField" value="storeinventory Get OrderInfo Started"/>
            </call-template>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="storeinventory"/>
                <with-param name="messageField" value="Calling get StoreOrderDetailsEP"/>
            </call-template>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="storeinventory"/>
                <with-param name="messageField" value="storeinventory storeinventoryDetails DEBUG LOG"/>
            </call-template>
            <enrich description="Save Payload">
                <source clone="true" type="body"/>
                <target property="payload" type="property"/>
            </enrich>
            <log level="custom">
                <property expression="get-property('payload')" name="Request to storeinventoryDetailsEP"/>
            </log>
            <send>
                <endpoint>
                    <http method="get" uri-template="https://petstore.swagger.io/v2/store/inventory">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </send>
        </inSequence>
        <outSequence>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <enrich description="Save Payload">
                <source clone="true" type="body"/>
                <target property="payload" type="property"/>
            </enrich>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="storeinventory"/>
                <with-param name="messageField" value="Calling storeinventoryDetailsEP Endpoint End"/>
            </call-template>
            <log level="custom">
                <property expression="get-property('payload')" name="Response from storeinventoryDetailsEP"/>
            </log>
            <filter regex="200" source="$axis2:HTTP_SC">
                <then>
                    <payloadFactory media-type="json">
                        <format>
								{
									  "sold": $1,
									  "placed": $2,
									  "string": $3,
									  "pending": $4,
									  "available": $5,
									  "status": $6
									}								 
								</format>
                        <args>
                            <arg evaluator="json" expression="$.sold"/>
                            <arg evaluator="json" expression="$.placed"/>
                            <arg evaluator="json" expression="$.string"/>
                            <arg evaluator="json" expression="$.pending"/>
                            <arg evaluator="json" expression="$.available"/>
                            <arg evaluator="json" expression="$.status"/>
                        </args>
                    </payloadFactory>
                </then>
                <else>
                    <property expression="json-eval($.code)" name="responseCode" scope="default" type="STRING"/>
                    <property expression="json-eval($.message)" name="responseMessage" scope="default" type="STRING"/>
                    <sequence key="GenericErrorHandlerSQ"/>
                </else>
            </filter>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="storeinventory"/>
                <with-param name="messageField" value="storeinventory Get StoreOrderDetails Ended"/>
            </call-template>
            <respond/>
        </outSequence>
        <faultSequence/>
    </resource>
</api>
