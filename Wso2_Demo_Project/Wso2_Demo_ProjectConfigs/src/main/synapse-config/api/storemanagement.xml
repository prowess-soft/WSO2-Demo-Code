<?xml version="1.0" encoding="UTF-8"?>
<api context="/storemanagement" name="storemanagement" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET" uri-template="/order/{orderId}">
        <inSequence>
            <property name="API_NAME" scope="default" type="STRING" value="StoreManagement"/>
            <property expression="fn:concat('/storemanagement',$axis2:REST_URL_POSTFIX)" name="API_URL" scope="default" type="STRING"/>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="StoreManagement"/>
                <with-param name="messageField" value="StoreManagement Get OrderInfo Initiated"/>
                <with-param name="logLevelField" value="DEBUG"/>
            </call-template>
            <property expression="get-property('uri.var.orderId')" name="uri.var.orderId" scope="default" type="INTEGER"/>
            <!-- Begin: Logging the Start of API call  -->
            <call-template target="LogTP">
                <with-param name="apiNameField" value="StoreManagement"/>
                <with-param name="messageField" value="StoreManagement Get OrderInfo Started"/>
            </call-template>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="StoreManagement"/>
                <with-param name="messageField" value="Calling get StoreOrderDetailsEP"/>
            </call-template>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="StoreManagement"/>
                <with-param name="messageField" value="StoreManagement StoreOrderDetails DEBUG LOG"/>
            </call-template>
            <enrich description="Save Payload">
                <source clone="true" type="body"/>
                <target property="payload" type="property"/>
            </enrich>
            <log level="custom">
                <property expression="get-property('payload')" name="Request to GetCustomerProfileDetailsEP"/>
            </log>
            <send>
                <endpoint>
                    <http method="get" uri-template="https://petstore.swagger.io/v2/store/order/{uri.var.orderId}">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </send>
        </inSequence>
        <outSequence>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <log level="custom">
                <property expression="get-property('orderId')" name="Response from  StoreManagement Backend"/>
                <property expression="$axis2:HTTP_SC" name="StoreManagement OrderID "/>
            </log>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <enrich description="Save Payload">
                <source clone="true" type="body"/>
                <target property="payload" type="property"/>
            </enrich>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="StoreManagement"/>
                <with-param name="messageField" value="Calling StoreOrderDetailsEP Endpoint End"/>
            </call-template>
            <log level="custom">
                <property expression="get-property('payload')" name="Response from GetCustomerProfileDetailsEP"/>
            </log>
            <filter regex="200" source="$axis2:HTTP_SC">
                <then>
                    <payloadFactory media-type="json">
                        <format>
								{
										  "id": $1,
										  "petId": $2,
										  "quantity": $3,
										  "shipDate": $4,
										  "status": $5,
										  "complete": $6
										}								 
								</format>
                        <args>
                            <arg evaluator="json" expression="$.id"/>
                            <arg evaluator="json" expression="$.petId"/>
                            <arg evaluator="json" expression="$.quantity"/>
                            <arg evaluator="json" expression="$.shipDate"/>
                            <arg evaluator="json" expression="$.status"/>
                            <arg evaluator="json" expression="$.complete"/>
                        </args>
                    </payloadFactory>
                </then>
                <else>
                    <property expression="json-eval($.code)" name="responseCode" scope="default" type="STRING"/>
                    <property expression="json-eval($.message)" name="responseMessage" scope="default" type="STRING"/>
                    <sequence key="GenericErrorHandlerSQ"/>
                </else>
            </filter>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="StoreManagement"/>
                <with-param name="messageField" value="StoreManagement Get StoreOrderDetails Ended"/>
            </call-template>
            <respond/>
        </outSequence>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/order">
        <inSequence>
            <property name="API_NAME" scope="default" type="STRING" value="StoreManagement"/>
            <property expression="fn:concat('/storemanagement',$axis2:REST_URL_POSTFIX)" name="API_URL" scope="default" type="STRING"/>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="StoreManagement"/>
                <with-param name="messageField" value="StoreManagement Get OrderInfo Initiated"/>
            </call-template>
            <!-- Begin: Logging the Start of API call  -->
            <call-template target="LogTP">
                <with-param name="apiNameField" value="StoreManagement"/>
                <with-param name="messageField" value="StoreManagement GetOrderInfo Started"/>
            </call-template>
            <!-- End: Logging the Start of API call  -->
            <!-- Begin: Checking Mandatory Params -->
            <call-template target="LogTP">
                <with-param name="apiNameField" value="StoreManagement"/>
                <with-param name="messageField" value="Calling GetOrderProfileDetailsEP Started"/>
            </call-template>
            <!-- Begin: Forming Payload for getCustomerProfileDetail  -->
            <call-template target="LogTP">
                <with-param name="apiNameField" value="StoreManagement"/>
                <with-param name="messageField" value="Calling GetOrderProfileDetailsEP send"/>
            </call-template>
            <enrich description="Save Payload">
                <source clone="true" type="body"/>
                <target property="payload" type="property"/>
            </enrich>
            <log level="custom">
                <property expression="get-property('payload')" name="Request to GetCustomerProfileDetailsEP"/>
            </log>
            <!-- End: Forming Payload for getCustomerProfileDetail  -->
            <!-- Begin: Calling getCustomerProfileDetailsEP  -->
            <send>
                <endpoint>
                    <http method="post" uri-template="https://petstore.swagger.io/v2/store/order">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </send>
        </inSequence>
        <outSequence>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <enrich description="Save Payload">
                <source clone="true" type="body"/>
                <target property="payload" type="property"/>
            </enrich>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="StoreManagement"/>
                <with-param name="messageField" value="Calling GetOrderProfileDetailsEP Endpoint End"/>
            </call-template>
            <filter regex="200" source="$axis2:HTTP_SC">
                <then>
                    <payloadFactory media-type="json">
                        <format>
								{
										  "id": $1,
										  "petId": $2,
										  "quantity": $3,
										  "shipDate": $4,
										  "status": $5,
										  "complete": $6
										}								 
								</format>
                        <args>
                            <arg evaluator="json" expression="$.id"/>
                            <arg evaluator="json" expression="$.petId"/>
                            <arg evaluator="json" expression="$.quantity"/>
                            <arg evaluator="json" expression="$.shipDate"/>
                            <arg evaluator="json" expression="$.status"/>
                            <arg evaluator="json" expression="$.complete"/>
                        </args>
                    </payloadFactory>
                </then>
                <else>
                    <property expression="json-eval($.code)" name="responseCode" scope="default" type="STRING"/>
                    <property expression="json-eval($.message)" name="responseMessage" scope="default" type="STRING"/>
                    <sequence key="GenericErrorHandlerSQ"/>
                </else>
            </filter>
            <call-template target="LogTP">
                <with-param name="apiNameField" value="StoreManagement"/>
                <with-param name="messageField" value="StoreManagement Get StoreOrderDetails Ended"/>
            </call-template>
            <respond/>
        </outSequence>
        <faultSequence/>
    </resource>
</api>
